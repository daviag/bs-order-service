apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  labels:
    app: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "9002"
    spec:
      containers:
        - name: order-service
          image: order-service
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                # makes k8s wait for 5 seconds before sending the SIGTERM
                command: [ "sh", "-c", "sleep 5" ]
          ports:
            - containerPort: 9002
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9002
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9002
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 9002
            initialDelaySeconds: 5
            periodSeconds: 15
          env:
            - name: BPL_JVM_THREAD_COUNT
              value: "50"
            - name: SPRING_R2DBC_URL
              value: r2dbc:postgresql://bookshop-postgres/bookshopdb_order
            - name: SPRING_FLYWAY_URL
              value: jdbc:postgresql://bookshop-postgres/bookshopdb_order
            - name: SPRING_CLOUD_CONFIG_URI
              value: http://config-service
            - name: BS_CATALOG_SERVICE_URI
              value: http://catalog-service
            - name: SPRING_RABBITMQ_HOST
              value: bookshop-rabbitmq
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
              value: http://bookshop-keycloak/realms/Bookshop